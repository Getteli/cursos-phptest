{"version":1,"defects":{"OrderBundle\\Validators\\Test\\NotEmptyValidatorTest::testWithValueFromValidatorNotEmptyAndEmpty":7,"OrderBundle\\Validators\\Test\\NotEmptyValidatorTest::testIsvalid#ShouldBeValidWhenValueIsEmpty":7,"OrderBundle\\Validators\\Test\\NumericValidatorTest::TestValidatorIsNumeric#ShouldBeValidWhenValueIsNumeric":5,"OrderBundle\\Validators\\Test\\NumericValidatorTest::TestValidatorIsNumeric#ShouldBeValidWhenValueIsNotNumeric":7,"OrderBundle\\Validators\\Test\\NumericValidatorTest::TestValidatorIsNumeric#ShouldBeValidWhenValueIsNumericString":7,"OrderBundle\\Validators\\Test\\CreditCardNumberValidatorTest::testCardNumberisValidCard#ShouldBeNotValidWhenValueIsShortCardNumber":7,"OrderBundle\\Validators\\Test\\CreditCardExpirationValidatorTest::testCreditCarExpiration#shouldBeValidCreditcardWhenValueGreaterThanNow":7,"OrderBundle\\Validators\\Test\\CreditCardExpirationValidatorTest::testCreditCarExpiration#shouldBeNotValidCreditcardWhenValueLessThanNow":8,"OrderBundle\\Validators\\Test\\CreditCardExpirationValidatorTest::testCreditCarExpiration#shouldBeNotValidCreditcardWhenValueIsNotDate":8,"OrderBundle\\Test\\Service\\BadWordsValidatorTest::testHasBadWords":7,"FidelityProgramBundle\\Test\\Service\\FidelityProgramServiceTest::testeShouldBeSaveReceivedPoints":8,"FidelityProgramBundle\\Test\\Service\\FidelityProgramServiceTest::testShouldBeSaveReceivedPoints":7,"PaymentBundle\\Test\\Service\\GatewayTest::testShoudNotPayWhenAuthenticationFail":8,"PaymentBundle\\Test\\Service\\GatewayTest::testShoudNotPayWhenFailOnGateway":8,"PaymentBundle\\Test\\Service\\GatewayTest::testShoudNotPayWhenGatewayReturnOk":7,"PaymentBundle\\Test\\Service\\GatewayTest::testShoudNotPayWhenAuthenticationFailReturnMock":8,"PaymentBundle\\Test\\Service\\GatewayTest::testShoudNotPayWhenFailOnGatewayReturnMock":8},"times":{"OrderBundle\\Validators\\Test\\NotEmptyValidatorTest::testShouldNotBeValidWhenValueIsEmpty":0.002,"OrderBundle\\Validators\\Test\\NotEmptyValidatorTest::testShouldBeValidWhenValueNotIsEmpty":0.001,"OrderBundle\\Validators\\Test\\NotEmptyValidatorTest::testWithValueFromValidatorNotEmptyAndEmpty":0.001,"OrderBundle\\Validators\\Test\\NotEmptyValidatorTest::testIsvalid#ShouldBeValidWhenValueIsEmpty":0.001,"OrderBundle\\Validators\\Test\\NotEmptyValidatorTest::testIsvalid#ShouldBeValidWhenValueIsNotEmpty":0.001,"OrderBundle\\Validators\\Test\\NumericValidatorTest::TestValidatorIsNumeric#ShouldBeValidWhenValueIsNumeric":0.009,"OrderBundle\\Validators\\Test\\NumericValidatorTest::TestValidatorIsNumeric#ShouldBeValidWhenValueIsNotNumeric":0.001,"OrderBundle\\Validators\\Test\\CreditCardExpirationValidatorTest::testIsValid#shouldBeValidWhenDateIsNotExpired":0.02,"OrderBundle\\Validators\\Test\\CreditCardExpirationValidatorTest::testIsValid#shouldNotBeValidWhenDateIsExpired":0.001,"OrderBundle\\Validators\\Test\\CreditCardNumberValidatorTest::testIsValid#shouldBeValidWhenValueIsANumber":0.001,"OrderBundle\\Validators\\Test\\CreditCardNumberValidatorTest::testIsValid#shouldBeValidWhenValueIsACreditCardAsString":0.001,"OrderBundle\\Validators\\Test\\CreditCardNumberValidatorTest::testIsValid#shouldNotBeValidWhenValueIsNotACreditCard":0.001,"OrderBundle\\Validators\\Test\\CreditCardNumberValidatorTest::testIsValid#shouldNotBeValidWhenValueIsEmpty":0.001,"OrderBundle\\Validators\\Test\\NumericValidatorTest::TestValidatorIsNumeric#ShouldBeValidWhenValueIsNumericString":0.001,"OrderBundle\\Validators\\Test\\NumericValidatorTest::TestValidatorIsNumeric#ShouldBeNotValidWhenValueIsNotNumeric":0.001,"OrderBundle\\Validators\\Test\\NumericValidatorTest::TestValidatorIsNumeric#ShouldBeNotValidWhenValueIsEmpty":0.001,"OrderBundle\\Validators\\Test\\CreditCardNumberValidatorTest::testCardNumberisValidCard#ShouldBeValidWhenValueIsCardNumber":0.377,"OrderBundle\\Validators\\Test\\CreditCardNumberValidatorTest::testCardNumberisValidCard#ShouldBeNotValidWhenValueIsShortCardNumber":0.661,"OrderBundle\\Validators\\Test\\CreditCardNumberValidatorTest::testCardNumberisValidCard#ShouldBeValidWhenValueIsStringCardNumber":0.001,"OrderBundle\\Validators\\Test\\CreditCardExpirationValidatorTest::testCreditCarExpiration#shouldBeValidCreditcardWhenValueGreaterThanNow":0.002,"OrderBundle\\Validators\\Test\\CreditCardExpirationValidatorTest::testCreditCarExpiration#shouldBeNotValidCreditcardWhenValueLessThanNow":0.001,"OrderBundle\\Validators\\Test\\CreditCardExpirationValidatorTest::testCreditCarExpiration#shouldBeNotValidCreditcardWhenValueIsNotDate":0.003,"OrderBundle\\Validators\\Test\\CreditCardExpirationValidatorTest::testCreditCarExpiration#shouldBeNotValidCreditcardWhenValueisNow":0.008,"OrderBundle\\Test\\Entity\\CustomerTest::TestCustomercanAllowToOrder":0.074,"OrderBundle\\Test\\Entity\\CustomerTest::testCustomercanAllowToOrder":0.011,"OrderBundle\\Test\\Entity\\CustomerTest::testCustomercanAllowToOrder#ShouldBeAllowedWhenCustomerIsActiveAndNotBlocked":0.008,"OrderBundle\\Test\\Entity\\CustomerTest::testCustomercanAllowToOrder#ShouldBeNotAllowedWhenCustomerIsNotActiveAndNotBlocked":0.001,"OrderBundle\\Test\\Entity\\CustomerTest::testCustomercanAllowToOrder#ShouldBeNotAllowedWhenCustomerIsNotActiveAndBlocked":0.002,"OrderBundle\\Test\\Service\\BadWordsValidatorTest::testHasBadWords":0.153,"OrderBundle\\Test\\Service\\BadWordsValidatorTest::testHasBadWords#shouldBeTrueWhenTextHasBadWords":0.03,"OrderBundle\\Test\\Service\\BadWordsValidatorTest::testHasBadWords#shouldBeFalseWhenTextHasNoBadWords":0.001,"OrderBundle\\Test\\Service\\BadWordsValidatorTest::testHasBadWords#shouldBeFalseWhenTextHasEmpty":0.001,"FidelityProgramBundle\\Test\\Service\\FidelityProgramServiceTest::testeShouldBeSaveReceivedPoints":2.019,"FidelityProgramBundle\\Test\\Service\\PointsCalculatorTest::testPointsToReceive#0":0.063,"FidelityProgramBundle\\Test\\Service\\PointsCalculatorTest::testPointsToReceive#1":0.001,"FidelityProgramBundle\\Test\\Service\\PointsCalculatorTest::testPointsToReceive#2":0.001,"FidelityProgramBundle\\Test\\Service\\PointsCalculatorTest::testPointsToReceive#3":0.001,"FidelityProgramBundle\\Test\\Service\\FidelityProgramServiceTest::testShouldBeSaveReceivedPoints":0.043,"FidelityProgramBundle\\Test\\Service\\FidelityProgramServiceTest::testShouldBeNOtSaveReceivedZeroPoints":0.004,"FidelityProgramBundle\\Test\\Service\\FidelityProgramServiceTest::testShouldBeSaveReceivedPointsWithSpy":0.063,"PaymentBundle\\Test\\Service\\GatewayTest::testShoudNotPayWhenAuthenticationFail":0.043,"PaymentBundle\\Test\\Service\\GatewayTest::testShoudNotPayWhenFailOnGateway":0.001,"PaymentBundle\\Test\\Service\\GatewayTest::testShoudNotPayWhenGatewayReturnOk":0.002,"PaymentBundle\\Test\\Service\\GatewayTest::testShoudNotPayWhenAuthenticationFailReturnMock":0.019,"PaymentBundle\\Test\\Service\\GatewayTest::testShoudNotPayWhenFailOnGatewayReturnMock":0.003}}